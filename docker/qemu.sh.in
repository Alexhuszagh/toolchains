#!/bin/bash
#
# Build Qemu for custom targets.
#   Ex: ARCH=riscv TARGETS=riscv32-linux-user,riscv64-linux-user \
#       ./qemu.sh

set -ex

# Check required environment variables.
if [ "$ARCH" = "" ]; then
    echo "Invalid arch, must provide a valid architecture prefix."
    exit 1
fi
if [ "$TARGETS" = "" ]; then
    echo "Invalid list of targets, must provide at least 1."
    exit 1
fi

export DEBIAN_FRONTEND="noninteractive"

# Add binfmt support for other formats, before we do anything.
apt-get update
apt-get install --assume-yes --no-install-recommends binfmt-support

# Install dependencies. We store the installed
# dependencies so we don't accidentally delete
# necessary files, and we get rid of everything
# that was only required for the build.
before_installed=($(apt -qq list --installed 2>/dev/null | cut -d '/' -f 1))
apt-get install --assume-yes --no-install-recommends \
    autoconf \
    automake \
    autotools-dev \
    bc \
    binutils-dev \
    bison \
    build-essential \
    curl \
    flex \
    gawk \
    gperf \
    libexpat-dev \
    libglib2.0-dev \
    libgmp-dev \
    libmpc-dev \
    libmpfr-dev \
    libtool \
    ninja-build \
    patchutils \
    pkg-config \
    python3 \
    python3-dev \
    python3-pip \
    texinfo \
    zlib1g-dev
after_installed=($(apt -qq list --installed 2>/dev/null | cut -d '/' -f 1))

# Calculate the packages we need to remove later.
diff=()
for i in "${after_installed[@]}"; do
    skip=
    for j in "${before_installed[@]}"; do
        [[ $i == $j ]] && { skip=1; break; }
    done
    [[ -n $skip ]] || diff+=("$i")
done
declare -p diff

# Create a source directory for easy cleanup.
mkdir -p src && cd src

# Clone Qemu
git clone https://git.qemu.org/git/qemu.git
cd qemu
git checkout v^QEMU_VERSION^

# Build Qemu
# The full list of valid targets is:
#   alpha-linux-user
#   arm-linux-user
#   armeb-linux-user
#   cris-linux-user
#   hexagon-linux-user
#   hppa-linux-user
#   i386-linux-user
#   m68k-linux-user
#   microblaze-linux-user
#   microblazeel-linux-user
#   mips-linux-user
#   mips64-linux-user
#   mips64el-linux-user
#   mipsel-linux-user
#   mipsn32-linux-user
#   mipsn32el-linux-user
#   nios2-linux-user
#   or1k-linux-user
#   ppc-linux-user
#   ppc64-linux-user
#   ppc64le-linux-user
#   riscv32-linux-user
#   riscv64-linux-user
#   s390x-linux-user
#   sh4-linux-user
#   sh4eb-linux-user
#   sparc-linux-user
#   sparc32plus-linux-user
#   sparc64-linux-user
#   x86_64-linux-user
#   xtensa-linux-user
#   xtensaeb-linux-user
mkdir build-"$ARCH" && cd build-"$ARCH"
../configure \
        --prefix=^SYSROOT^ \
        --static \
        --target-list="$TARGETS" \
        --interp-prefix=^SYSROOT^/"$ARCH"/sysroot \
        --python=python3
make -j ^JOBS^
make install

# Remove all dependencies, to ensure we have a small image.
cd /
rm -rf /src
apt-get remove --purge --assume-yes "${diff[@]}"
apt-get autoremove --assume-yes
