#!/bin/bash
#
# Install vcpkg package management system.
#
# Includes wrappers to add the triplet and other
# configurations out-of-the-box.

set -ex

# Check required environment variables.
if [ "$PROCESSOR" = "" ]; then
    echo 'Must set the target processor via `$PROCESSOR`, quitting.'
    exit 1
fi
if [ "$SYSTEM" = "" ]; then
    echo 'Must set the target operating system via `$SYSTEM`, quitting.'
    exit 1
fi
if [ "$TRIPLE" = "" ]; then
    echo 'Must set the target triplet via `$TRIPLE`, quitting.'
    exit 1
fi
if [ "$LINKAGE" = "" ]; then
    echo 'Must set the target triplet via `$LINKAGE`, quitting.'
    echo 'Valid values are `static` and `dynamic`.'
    exit 1
fi

export DEBIAN_FRONTEND="noninteractive"

# Install dependencies we need after to use vcpkg.
apt-get update
apt-get install --assume-yes --no-install-recommends \
    curl \
    pkg-config \
    tar \
    unzip \
    zip

# Install dependencies. We store the installed
# dependencies so we don't accidentally delete
# necessary files, and we get rid of everything
# that was only required for the build.
before_installed=($(apt -qq list --installed 2>/dev/null | cut -d '/' -f 1))
apt-get install --assume-yes --no-install-recommends \
    g++ \
    ca-certificates \
    jq \
    wget
after_installed=($(apt -qq list --installed 2>/dev/null | cut -d '/' -f 1))

# Calculate the packages we need to remove later.
diff=()
for i in "${after_installed[@]}"; do
    skip=
    for j in "${before_installed[@]}"; do
        [[ $i == $j ]] && { skip=1; break; }
    done
    [[ -n $skip ]] || diff+=("$i")
done
declare -p diff

# Download our latest release.
url="https://api.github.com/repos/microsoft/vcpkg/releases/latest"
release=$(curl "$url" --silent | jq -r '.zipball_url')
wget "$release" -O vcpkg.zip
mkdir -p ^SYSROOT^/vcpkg/
unzip vcpkg.zip -d ^SYSROOT^/vcpkg/
subdir=$(ls ^SYSROOT^/vcpkg)
shopt -s dotglob
mv ^SYSROOT^/vcpkg/"$subdir"/* ^SYSROOT^/vcpkg
shopt -u dotglob
rmdir ^SYSROOT^/vcpkg/"$subdir"

# Bootstrap the build, and remove unnecessary extras.
^SYSROOT^/vcpkg/bootstrap-vcpkg.sh

# Create our custom triplet, as a drop-in replacement for a community one.
triplet="set(VCPKG_TARGET_ARCHITECTURE $PROCESSOR)
set(VCPKG_CRT_LINKAGE dynamic)
set(VCPKG_LIBRARY_LINKAGE $LINKAGE)
set(VCPKG_CMAKE_SYSTEM_NAME $SYSTEM)

if(NOT CMAKE_HOST_SYSTEM_PROCESSOR)
    execute_process(COMMAND \"uname\" \"-m\" OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_PROCESSOR OUTPUT_STRIP_TRAILING_WHITESPACE)
endif()"
# Need to add items for MinGW and other systems.
if [ "$SYSTEM" = "MinGW" ]; then
    triplet="$triplet
set(VCPKG_ENV_PASSTHROUGH PATH)"
    if [ "$LINKAGE" = "dynamic" ]; then
        triplet="$triplet
set(VCPKG_POLICY_DLLS_WITHOUT_LIBS enabled)"
    fi
fi
# Need to add our custom toolchain information from our CMakeLists.
# Need to make sure we add an `-xcross` to avoid overwriting existing
# toolchains.
toolchain=$(cat /toolchains/toolchain.cmake)
toolchain=$(echo "$toolchain" | sed '/^CMAKE_MINIMUM_REQUIRED.*$/d')
toolchain=$(echo "$toolchain" | sed '/^SET(CMAKE_SYSTEM_NAME.*$/d')
triplet="$triplet
$toolchain"
echo "$triplet" > ^SYSROOT^/vcpkg/triplets/community/"$TRIPLE"-xcross.cmake

# Change our permissions, since we need to be able to write as a user.
chmod -R +660 ^SYSROOT^/vcpkg
chown -R cross:cross ^SYSROOT^/vcpkg

# Create an alias for vcpkg.
echo '#!/bin/bash
^SYSROOT^/vcpkg/vcpkg "$@" --triplet $(cat /env/triplet)-xcross' > ^BIN^/vcpkg
chmod +x ^BIN^/vcpkg

# Create an environment variable containing the triplet.
# We want to make
echo "$TRIPLE" > /env/triplet

# Cleanup
# Even though we didn't install GCC, it doesn't get autoremoved,
# which takes up a lot of space.
apt-get remove --purge --assume-yes "${diff[@]}"
apt-get autoremove --assume-yes
