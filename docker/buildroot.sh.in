#!/bin/bash
#
# Build a custom toolchain using buildroot.

set -ex

export DEBIAN_FRONTEND="noninteractive"

# Install dependencies. We store the installed
# dependencies so we don't accidentally delete
# necessary files, and we get rid of everything
# that was only required for the build.
# This is probably more than we need, but
# since we remove them later, it's no big deal.
apt-get update
before_installed=($(apt -qq list --installed 2>/dev/null | cut -d '/' -f 1))
apt-get install --assume-yes --no-install-recommends \
    autoconf \
    bc \
    bison \
    cpio \
    flex \
    g++ \
    gawk \
    help2man \
    libncurses-dev \
    libtool-bin \
    patch \
    python3 \
    python3-dev \
    python3-pip \
    rsync \
    texinfo \
    unzip \
    wget \
    xz-utils
after_installed=($(apt -qq list --installed 2>/dev/null | cut -d '/' -f 1))

# Calculate the packages we need to remove later.
diff=()
for i in "${after_installed[@]}"; do
    skip=
    for j in "${before_installed[@]}"; do
        [[ $i == $j ]] && { skip=1; break; }
    done
    [[ -n $skip ]] || diff+=("$i")
done
declare -p diff

# Create a source directory for easy cleanup.
mkdir -p src && cd src

# Download, extract, and build buildroot.
wget https://buildroot.org/downloads/buildroot-^BUILDROOT_VERSION^.tar.gz
tar xvf buildroot-^BUILDROOT_VERSION^.tar.gz
rm -f buildroot-^BUILDROOT_VERSION^.tar.gz
cd buildroot-^BUILDROOT_VERSION^

# Copy our configurations over.
cp /src/.config ./
make sdk -j ^JOBS^

# Now need to copy over the toolchain to our install prefix.
mv output/host /home/crosstoolng/buildroot
/home/crosstoolng/buildroot/relocate-sdk.sh

# Cleanup
# Even though we didn't install GCC, it doesn't get autoremoved,
# which takes up a lot of space.
cd /
rm -rf /src
apt-get remove --purge --assume-yes "${diff[@]}"
apt-get autoremove --assume-yes
